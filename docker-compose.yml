version: '3.4'

# -----------------------------------------------------------------------------
# "extensions", these are extended by the containers below
x-base: &base
    image: mongo:4
    networks:
        - mongozone
    environment:
        - SSL_PEM_PASSWORD=${SSL_PEM_PASSWORD}
    command: ["/run.sh"]

x-config: &config
    <<: *base
    expose: ["27019"]

x-shard: &shard
    <<: *base
    expose: ["${MONGOS_PORT}"]

# -----------------------------------------------------------------------------

services:

    config-1:
        <<: *config
        container_name: mongo-cluster-config1-container
        volumes:
            - "./volumes/config-1:/data"
            - "./volumes/run-config.sh:/run.sh"

    config-2:
        <<: *config
        container_name: mongo-cluster-config2-container
        volumes:
            - "./volumes/config-2:/data"
            - "./volumes/run-config.sh:/run.sh"

    config-3:
        <<: *config
        container_name: mongo-cluster-config3-container
        volumes:
            - "./volumes/config-3:/data"
            - "./volumes/run-config.sh:/run.sh"

    alpha-1:
        <<: *shard
        container_name: mongo-cluster-alpha1-container
        volumes:
            - "./volumes/alpha-1:/data"
            - "./volumes/run-alpha.sh:/run.sh"

    alpha-2:
        <<: *shard
        container_name: mongo-cluster-alpha2-container
        volumes:
            - "./volumes/alpha-2:/data"
            - "./volumes/run-alpha.sh:/run.sh"

    alpha-3:
        <<: *shard
        container_name: mongo-cluster-alpha3-container
        volumes:
            - "./volumes/alpha-3:/data"
            - "./volumes/run-alpha.sh:/run.sh"

    beta-1:
        <<: *shard
        container_name: mongo-cluster-beta1-container
        volumes:
            - "./volumes/beta-1:/data"
            - "./volumes/run-beta.sh:/run.sh"

    beta-2:
        <<: *shard
        container_name: mongo-cluster-beta2-container
        volumes:
            - "./volumes/beta-2:/data"
            - "./volumes/run-beta.sh:/run.sh"

    beta-3:
        <<: *shard
        container_name: mongo-cluster-beta3-container
        volumes:
            - "./volumes/beta-3:/data"
            - "./volumes/run-beta.sh:/run.sh"

    gamma-1:
        <<: *shard
        container_name: mongo-cluster-gamma1-container
        volumes:
            - "./volumes/gamma-1:/data"
            - "./volumes/run-gamma.sh:/run.sh"

    gamma-2:
        <<: *shard
        container_name: mongo-cluster-gamma2-container
        volumes:
            - "./volumes/gamma-2:/data"
            - "./volumes/run-gamma.sh:/run.sh"

    gamma-3:
        <<: *shard
        container_name: mongo-cluster-gamma3-container
        volumes:
            - "./volumes/gamma-3:/data"
            - "./volumes/run-gamma.sh:/run.sh"

    mongos-1:
        <<: *base
        container_name: mongo-shard-router-1
        volumes:
            - "./volumes/mongos-1:/data"
            - "./volumes/run-mongos.sh:/run.sh"

        ports:
            - "${MONGOS_PORT}:27017"

    adminmongo:
        container_name: admin-mongo-container
        image: mrvautin/adminmongo
        environment:
            - CONN_NAME=MONGOS
            - DB_USERNAME=${ADMIN_USER}
            - DB_PASSWORD=${ADMIN_PASSWORD}
            - DB_HOST=mongos-1
            - DB_PORT=27017
            - DB_NAME=${APP_DATABASE}
        ports:
            - "${MONGO_ADMIN_PORT}:1234"
        volumes:
            - "./volumes/wait-for-mongo.js:/app/user/wait-for-mongo.js"
            - "./volumes/mongoadminconfig.json:/app/user/config/app.json"
        networks:
            - mongozone
        command: ["node", "wait-for-mongo.js"]

    mgodatagen:
        container_name: mongo-mgodatagen
        build: docker/mgodatagen
        networks:
            - mongozone
        environment:
            - DB_USERNAME=${APP_USER}
            - DB_PASSWORD=${APP_PASSWORD}
        volumes:
            - "./volumes/mgodatagen:/testdata"


networks:
    mongozone:
        external: false

